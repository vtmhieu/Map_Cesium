"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readJsonUnchecked = void 0;
const fs_1 = __importDefault(require("fs"));
const _3d_tiles_tools_1 = require("3d-tiles-tools");
/**
 * Only for internal use and basic tests:
 *
 * Reads a JSON file, parses it, and returns the result.
 * If the file cannot be read or parsed, then an error
 * message will be printed and `undefined` is returned.
 *
 * @param filePath - The path to the file
 * @returns A promise that resolves with the result or `undefined`
 */
async function readJsonUnchecked(filePath) {
    try {
        const data = fs_1.default.readFileSync(filePath);
        if (!(0, _3d_tiles_tools_1.defined)(data)) {
            console.error("Could not read " + filePath);
            return undefined;
        }
        const jsonString = data.toString();
        const result = JSON.parse(jsonString);
        return result;
    }
    catch (error) {
        console.error("Could not parse JSON", error);
        return undefined;
    }
}
exports.readJsonUnchecked = readJsonUnchecked;
