import { ValidationContext } from "./../ValidationContext";
import { Schema } from "3d-tiles-tools";
import { ClassProperty } from "3d-tiles-tools";
/**
 * A class for validations related to `class.property` objects.
 *
 * @internal
 */
export declare class ClassPropertyValidator {
    /**
     * Validates that the given object is a valid `class.property` object.
     *
     * @param schema - The `Schema`
     * @param propertyPath - The path for the `ValidationIssue` instances
     * @param propertyName - The name of the property
     * @param property - The property
     * @param context - The `ValidationContext`
     * @returns Whether the object was valid
     */
    static validateClassProperty(schema: Schema, propertyPath: string, propertyName: string, property: ClassProperty | undefined, context: ValidationContext): boolean;
    /**
     * Internal method for `validateClassProperty` that just
     * assumes that the property is defined and an `"object"`.
     *
     * @param schema - The `Schema`
     * @param propertyPath - The path for the `ValidationIssue` instances
     * @param propertyName - The name of the property
     * @param property - The property
     * @param context - The `ValidationContext`
     * @returns Whether the object was valid
     */
    private static validateClassPropertyInternal;
    /**
     * Validate the values that are given for certain properties of
     * the `ClassProperty`.
     *
     * This validates the `offset/scale/max/min/default/noData` values
     * of the given `ClassProperty`. This is supposed to be called
     * after (i.e. at the end of) `validateClassProperty`, when the
     * basic structure of the class property has already been
     * determined to be valid.
     *
     * @param schema - The `Schema`
     * @param propertyPath - The path for the `ValidationIssue` instances
     * @param propertyName - The name of the property
     * @param property - The property
     * @param context - The `ValidationContext`
     * @returns Whether the object was valid
     */
    private static validateClassPropertyValues;
}
//# sourceMappingURL=ClassPropertyValidator.d.ts.map