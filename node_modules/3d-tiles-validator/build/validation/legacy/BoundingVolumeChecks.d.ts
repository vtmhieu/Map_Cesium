import { BoundingVolume } from "3d-tiles-tools";
/**
 * The checks for bounding volumes from the the original 3d-tiles-validator.
 */
export declare class BoundingVolumeChecks {
    /**
     * The only public method:
     *
     * Checks if the given inner bounding volume is contained in
     * the given outer bounding volume, taking the given transforms
     * into account.
     *
     * If the inner bounding volume is contained in the outer one,
     * then `undefined` is returned.
     * Otherwise, an error message is returned.
     *
     * @param innerBoundingVolume - The inner `BoundingVolume`
     * @param outerBoundingVolume - The outer `BoundingVolume`
     * @param innerTransformArray - The inner transform as an array of 16 elements
     * @param outerTransformArray - The outer transform as an array of 16 elements
     * @returns An error message, or `undefined`
     */
    static checkBoundingVolume(innerBoundingVolume: BoundingVolume, outerBoundingVolume: BoundingVolume, innerTransformArray: number[] | undefined, outerTransformArray: number[] | undefined): string | undefined;
    private static readonly scratchMatrix;
    private static readonly scratchHalfAxes;
    private static readonly scratchCenter;
    private static readonly scratchScale;
    private static getTransformedBox;
    private static getTransformedSphere;
    private static regionInsideRegion;
    private static readonly scratchInnerCenter;
    private static readonly scratchOuterCenter;
    private static sphereInsideSphere;
    private static readonly scratchInnerHalfAxes;
    private static readonly scratchOuterHalfAxes;
    private static boxInsideBox;
    private static readonly scratchBoxCenter;
    private static readonly scratchSphereCenter;
    private static readonly scratchBoxHalfAxes;
    private static boxInsideSphere;
    private static sphereInsideBox;
    private static planeFromPoints;
    private static createUnitCube;
}
//# sourceMappingURL=BoundingVolumeChecks.d.ts.map