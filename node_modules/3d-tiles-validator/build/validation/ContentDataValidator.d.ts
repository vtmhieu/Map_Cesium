import { ValidationContext } from "./ValidationContext";
import { Content } from "3d-tiles-tools";
/**
 * A class for validation of the data that is pointed to by a `content.uri`.
 *
 * @internal
 */
export declare class ContentDataValidator {
    /**
     * Validate the actual data that is referred to by the URI in the
     * given content.
     *
     * This assumes that the given content has already been validated
     * to be structurally valid, using the `ContentValidator`.
     *
     * @param contentPath - The path for the `ValidationIssue` instances
     * @param content - The `Content` object
     * @param context - The `ValidationContext`
     * @returns A promise that resolves when the validation is finished
     */
    static validateContentData(contentPath: string, content: Content, context: ValidationContext): Promise<boolean>;
    /**
     * Perform the validation of the content data that is pointed to
     * by the given content URI.
     *
     * If the data causes validation issues, they will be summarized
     * into a `CONTENT_VALIDATION_ERROR` or `CONTENT_VALIDATION_WARNING`
     * that is added to the given context.
     *
     * If the data type cannot be determined, an `CONTENT_VALIDATION_WARNING`
     * will be added to the given context.
     *
     * @param contentPath - The path for the `ValidationIssue` instances.
     * @param contentUri - The URI of the content
     * @param context - The `ValidationContext`
     * @returns A promise that resolves when the validation is finished
     */
    private static validateContentDataInternal;
    /**
     * Track the extensions that are used, and which only refer to
     * allowing certain content data types.
     *
     * When a certain content data type that requires an extension
     * is encountered, then the respective extension will be added
     * as a "found" extension to the given context.
     *
     * @param contentData - The `ContentData`
     * @param context - The `ValidationContext`
     */
    private static trackExtensionsFound;
}
//# sourceMappingURL=ContentDataValidator.d.ts.map