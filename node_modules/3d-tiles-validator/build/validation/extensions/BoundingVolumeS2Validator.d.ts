import { Validator } from "../Validator";
import { ValidationContext } from "../ValidationContext";
/**
 * A class for the validation of bounding volumes that contain
 * `3DTILES_bounding_volume_S2` extension objects
 *
 * @internal
 */
export declare class BoundingVolumeS2Validator implements Validator<any> {
    /**
     * Performs the validation of a `BoundungVolume` object that
     * contains a `3DTILES_bounding_volume_S2` extension object.
     *
     * @param path - The path for `ValidationIssue` instances
     * @param boundingVolume - The object to validate
     * @param context - The `ValidationContext` that any issues will be added to
     * @returns Whether the object was valid
     */
    validateObject(path: string, boundingVolume: any, context: ValidationContext): Promise<boolean>;
    /**
     * Performs the validation to ensure that the given object is a
     * valid `3DTILES_bounding_volume_S2` object.
     *
     * @param path - The path for `ValidationIssue` instances
     * @param object - The object to validate
     * @param context - The `ValidationContext` that any issues will be added to
     * @returns Whether the object was valid
     */
    static validateBoundingVolumeS2(path: string, object: any, context: ValidationContext): boolean;
    /**
     * Peforms a basic validation that the given string is a valid S2 cell token
     *
     * @param token - The token
     * @returns Whether the token is valid
     */
    private static isValidToken;
}
//# sourceMappingURL=BoundingVolumeS2Validator.d.ts.map