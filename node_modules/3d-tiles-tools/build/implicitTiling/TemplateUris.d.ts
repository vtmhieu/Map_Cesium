import { OctreeCoordinates } from "../spatial/OctreeCoordinates";
import { QuadtreeCoordinates } from "../spatial/QuadtreeCoordinates";
/**
 * Method related to template URIs for implicit tiling.
 *
 * @internal
 */
export declare class TemplateUris {
    /**
     * Substitute all appearances of \{level\}, \{x\}, and \{y\} in
     * the given string with the respective value from the given
     * coordinates.
     *
     * @param templateUri - The template URI string
     * @param coordinates - The coordinates
     * @returns The string with the substitutions applied
     */
    static substituteQuadtree(templateUri: string, coordinates: QuadtreeCoordinates): string;
    /**
     * Resolves each appearance of \{level\}, \{x\},
     * and \{y\} in the given template string with the
     * respective parameters.
     *
     * @param templateUri - The template URI
     * @param level - The level
     * @param x - The x-coordinate
     * @param y - The y-coordinate
     * @returns The result
     */
    static substituteQuadtreeInternal(templateUri: string, level: number, x: number, y: number): string;
    /**
     * Substitute all appearances of \{level\}, \{x\}, \{y\}, and \{z\} in
     * the given string with the respective value from the given
     * coordinates.
     *
     * @param templateUri - The template URI string
     * @param coordinates - The coordinates
     * @returns The string with the substitutions applied
     */
    static substituteOctree(templateUri: string, coordinates: OctreeCoordinates): string;
    /**
     * Resolves each appearance of \{level\}, \{x\},
     * \{y\}, and \{z\} in the given template string
     * with the respective parameters.
     *
     * @param templateUri - The template URI
     * @param level - The level
     * @param x - The x-coordinate
     * @param y - The y-coordinate
     * @param z - The z-coordinate
     * @returns The result
     */
    static substituteOctreeInternal(templateUri: string, level: number, x: number, y: number, z: number): string;
}
//# sourceMappingURL=TemplateUris.d.ts.map