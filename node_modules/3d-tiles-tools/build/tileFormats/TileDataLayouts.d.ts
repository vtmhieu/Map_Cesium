/// <reference types="node" />
/**
 * An interface describing the start, length, and end (in bytes)
 * of one "block" inside the tile data.
 *
 * A "block" can be the feature- and batch table JSON and binary,
 * as well as the payload.
 */
export interface TileDataBlockLayout {
    start: number;
    length: number;
    end: number;
}
/**
 * An interface describing the layout of tile data (B3DM,
 * I3DM and PNTS)
 */
export interface TileDataLayout {
    magic: string;
    headerLength: number;
    byteLength: number;
    featureTableJson: TileDataBlockLayout;
    featureTableBinary: TileDataBlockLayout;
    batchTableJson: TileDataBlockLayout;
    batchTableBinary: TileDataBlockLayout;
    payload: TileDataBlockLayout;
    legacyBatchLength: number | undefined;
}
/**
 * Methods to compute `TileDataLayout` instances from the information
 * that was read from the binary header.
 */
export declare class TileDataLayouts {
    static create(buffer: Buffer): TileDataLayout;
}
//# sourceMappingURL=TileDataLayouts.d.ts.map